//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "DecFile.h"

//#import "ReachabilityDelegate.h"
#import "XMPPStreamDelegate-Protocol.h"

@class EmojiConverter, NSConditionLock, NSData, NSDate, NSMutableArray, NSMutableDictionary, NSString, NSThread, Reachability, WAWatchdogTimer, XMPPRequestManager, XMPPStream;

__attribute__((visibility("hidden")))
@interface XMPPConnection : NSObject <XMPPStreamDelegate>
{
    XMPPStream *_stream;
    struct dispatch_source_s *_checkConnectionTimer;
    struct dispatch_source_s *_checkFieldStatsTimer;
    WAWatchdogTimer *_updatePresenceTimer;
    NSThread *_xmppThread;
    NSConditionLock *_lock;
    XMPPRequestManager *_requests;
    NSMutableDictionary *_clientData;
    NSMutableDictionary *_unsentMessages;
    NSMutableDictionary *_watchdogTimers;
    Reachability *_hostReach;
    int _testConnectionAttempts;
    int _connectionAttempts;
    unsigned int _lastPresence;
    BOOL _firstOfflineMessageReceived;
    NSMutableArray *_recentlySentAcks;
    NSMutableArray *_acks;
    EmojiConverter *_emojiConverter;
    BOOL _convertEmoji;
    BOOL _connecting;
    BOOL _disconnecting;
    BOOL _reconnecting;
    BOOL _connected;
    BOOL _enableConnection;
    BOOL _voipNetworkChangedIndication;
    BOOL _waitingForMessages;
    unsigned int _state;
    unsigned int _type;
    unsigned int _networkStatus;
    NSString *_accountType;
    NSDate *_accountCreation;
    NSDate *_accountExpiration;
    int _backgroundConnectionAttempts;
    int _serverTimeShift;
    NSDate *_dateConnecting;
    NSDate *_dateConnected;
}

+ (id)normalizedNumber:(id)arg1;
+ (id)normalizedNumber;
@property BOOL waitingForMessages; // @synthesize waitingForMessages=_waitingForMessages;
@property(retain) NSDate *dateConnected; // @synthesize dateConnected=_dateConnected;
@property(retain) NSDate *dateConnecting; // @synthesize dateConnecting=_dateConnecting;
@property BOOL voipNetworkChangedIndication; // @synthesize voipNetworkChangedIndication=_voipNetworkChangedIndication;
@property int serverTimeShift; // @synthesize serverTimeShift=_serverTimeShift;
@property int backgroundConnectionAttempts; // @synthesize backgroundConnectionAttempts=_backgroundConnectionAttempts;
@property BOOL enableConnection; // @synthesize enableConnection=_enableConnection;
@property(retain) NSDate *accountExpiration; // @synthesize accountExpiration=_accountExpiration;
@property(retain) NSDate *accountCreation; // @synthesize accountCreation=_accountCreation;
@property(retain) NSString *accountType; // @synthesize accountType=_accountType;
@property(getter=isConnected) BOOL connected; // @synthesize connected=_connected;
@property(getter=isReconnecting) BOOL reconnecting; // @synthesize reconnecting=_reconnecting;
@property(getter=isDisconnecting) BOOL disconnecting; // @synthesize disconnecting=_disconnecting;
@property(getter=isConnecting) BOOL connecting; // @synthesize connecting=_connecting;
@property unsigned int networkStatus; // @synthesize networkStatus=_networkStatus;
@property unsigned int type; // @synthesize type=_type;
@property unsigned int state; // @synthesize state=_state;
- (void)sendCallStanza:(id)arg1;
- (void)endCallStanzaTimeout:(id)arg1;
- (void)startCallStanzaTimeout:(id)arg1;
- (void)sendPushName:(id)arg1;
- (id)createPresence:(unsigned int)arg1 withNickname:(id)arg2;
- (id)convertOutgoingEmojiString:(id)arg1;
- (void)passiveMode:(BOOL)arg1;
@property(readonly) BOOL passiveMode;
- (void)reportFieldStatsWithName:(id)arg1 info:(id)arg2;
- (void)requestVOIPCallabilityForJIDs:(id)arg1 block:(id)arg2;
- (void)requestBroadcastListsWithBlock:(id)arg1;
- (void)deleteBroadcastListFromServer:(id)arg1 block:(id)arg2;
- (void)cleanDirtyFlags:(id)arg1 block:(id)arg2;
- (void)queryServerPropertiesWithBlock:(id)arg1;
- (void)participatingGroupsWithBlock:(id)arg1;
- (void)participantListForGroup:(id)arg1 block:(id)arg2;
- (void)leaveFromGroup:(id)arg1 block:(id)arg2;
- (void)getGroupInfo:(id)arg1 block:(id)arg2;
- (void)addParticipantsToGroup:(id)arg1 participants:(id)arg2 name:(id)arg3 block:(id)arg4;
- (void)removeParticipantsFromGroup:(id)arg1 participants:(id)arg2 block:(id)arg3;
- (void)setGroupSubject:(id)arg1 subject:(id)arg2 name:(id)arg3 block:(id)arg4;
- (void)createGroup:(id)arg1 block:(id)arg2;
- (void)reachability:(id)arg1 networkStatusChanged:(id)arg2;
- (void)changeNetworkStatus:(unsigned int)arg1;
- (void)waitingForMessagesTimeout;
- (void)sendAckForNotification:(id)arg1;
- (void)sendDeliveryReceiptsForMessages:(id)arg1;
- (void)sendDeliveryReceiptsForChatMessages:(id)arg1;
- (void)sendPlayedReceiptForMessage:(id)arg1;
- (void)xmppThread;
- (void)checkConnection;
- (void)connect;
- (void)checkFieldStats;
- (void)closeStream;
- (void)xmppStreamDidClose:(id)arg1;
- (void)xmppStream:(id)arg1 didReceiveCustomStanza:(id)arg2;
- (void)xmppStream:(id)arg1 didReceiveNotification:(id)arg2;
- (void)xmppStream:(id)arg1 didReceiveChatState:(id)arg2;
- (void)xmppStream:(id)arg1 didReceiveAck:(id)arg2;
- (void)xmppStream:(id)arg1 didReceiveReceipt:(id)arg2;
- (void)xmppStream:(id)arg1 didReceivePresence:(id)arg2;
- (void)xmppStream:(id)arg1 didReceiveMessages:(id)arg2;
- (void)xmppStream:(id)arg1 didReceiveIQ:(id)arg2;
- (void)xmppStreamDidNotAuthenticate:(id)arg1;
- (void)xmppStreamDidAuthenticate:(id)arg1 kind:(id)arg2 creation:(id)arg3 expiration:(id)arg4 serverTimeShift:(int)arg5;
- (void)xmppStreamDidOpen:(id)arg1;
- (void)sendIQResponse:(id)arg1;
- (void)setChatState:(unsigned int)arg1 forJID:(id)arg2;
- (id)createPresenceWithType:(unsigned int)arg1 nickname:(id)arg2;
- (id)clientDataForJID:(id)arg1;
- (void)processIncomingMessageStanzas:(id)arg1;
- (void)changeStatus:(unsigned int)arg1 forMessageWithStanzaID:(id)arg2 fromJID:(id)arg3 participantJID:(id)arg4 userData:(id)arg5;
- (void)failedNotConnected:(id)arg1 thread:(id)arg2 selector:(SEL)arg3 userData:(id)arg4;
- (void)contactsSync:(id)arg1 mode:(unsigned int)arg2 context:(unsigned int)arg3 delegate:(id)arg4 didFinishSelector:(SEL)arg5 didFailSelector:(SEL)arg6 userData:(id)arg7 withTimeout:(id)arg8;
- (void)contactsSync:(id)arg1;
- (void)setPassword:(id)arg1;
- (void)reloadPassword;
- (id)password;
- (BOOL)storePassword:(id)arg1;
- (void)removePasswordFile;
- (id)passwordFilePath;
- (id)getOrGenerateRecoveryToken:(id)arg1;
- (void)sendRecoveryToken:(id)arg1 block:(id)arg2;
- (void)ackMediaForUrl:(id)arg1 block:(id)arg2;
- (void)requestUploadUrlForFileHash:(id)arg1 origHash:(id)arg2 filetype:(id)arg3 filesize:(id)arg4 delegate:(id)arg5 didFinishSelector:(SEL)arg6 didFailSelector:(SEL)arg7 userData:(id)arg8 withTimeout:(id)arg9;
- (void)requestUploadUrlForFileHash:(id)arg1 origHash:(id)arg2 filetype:(id)arg3 filesize:(id)arg4 mediaIndex:(int)arg5 totalMediaCount:(int)arg6 delegate:(id)arg7 didFinishSelector:(SEL)arg8 didFailSelector:(SEL)arg9 userData:(id)arg10 withTimeout:(id)arg11;
- (void)requestUploadUrlForFileHash:(id)arg1 origHash:(id)arg2 filetype:(unsigned int)arg3 filesize:(int)arg4 mediaIndex:(int)arg5 totalMediaCount:(int)arg6 block:(id)arg7;
- (void)requestLastSeenForJID:(id)arg1;
- (void)getLastSeenForJID:(id)arg1 block:(id)arg2;
- (void)ping;
- (void)getStatusForJIDs:(id)arg1 block:(id)arg2;
- (void)setStatus:(id)arg1 block:(id)arg2;
- (void)changeNumber:(id)arg1 password:(id)arg2 block:(id)arg3;
- (void)normalizeNumber:(id)arg1 countryCode:(id)arg2 block:(id)arg3;
- (void)deleteAccount:(id)arg1 block:(id)arg2;
- (void)setBlacklist:(id)arg1 block:(id)arg2;
- (void)getBlacklistWithBlock:(id)arg1;
- (void)getProfilePictureIDsForJIDs:(id)arg1 block:(id)arg2;
- (void)getProfilePictureFrom:(id)arg1 type:(unsigned int)arg2 identifier:(id)arg3 block:(id)arg4;
- (void)setProfilePicture:(id)arg1 thumbnail:(id)arg2 to:(id)arg3 block:(id)arg4;
- (void)sendPushConfig:(id)arg1 includeGroups:(BOOL)arg2 block:(id)arg3;
- (void)setNotificationsConfig:(id)arg1 block:(id)arg2;
- (void)setPrivacy:(id)arg1 block:(id)arg2;
- (void)queryPrivacySettingsWithBlock:(id)arg1;
- (void)updatePresence;
- (void)sendPresence:(id)arg1;
- (id)lastActivityForJID:(id)arg1;
- (unsigned int)lastChatStateForJID:(id)arg1;
- (unsigned int)lastPresenceForJID:(id)arg1;
- (void)changeChatState:(unsigned int)arg1 forJID:(id)arg2;
- (void)autorizationRequestForJID:(id)arg1;
- (void)sendMessages:(id)arg1;
- (void)sendMessage:(id)arg1;
- (void)endMessageTimeout:(id)arg1;
- (void)startMessageTimeout:(id)arg1;
- (void)markMessagesAsUnsent;
- (void)resendUnsentMessages;
- (void)copyMessageDataFrom:(id)arg1 to:(id)arg2;
- (BOOL)isOnline:(id)arg1;
- (void)setHint:(id)arg1;
- (void)checkConnectionState;
- (void)drop;
- (void)close;
- (void)waitForState:(unsigned int)arg1;
- (void)updateState:(unsigned int)arg1;
- (id)stateToString:(unsigned int)arg1;
@property BOOL contactsAccessAllowed;
@property(readonly) unsigned short currentPort;
@property(readonly) NSString *currentHost;
@property(readonly) NSString *currentIP;
@property(readonly) NSString *myJID;
@property(readonly) NSData *xmppPassword;
@property(retain) NSString *xmppUser;
- (void)systemTimeChanged:(id)arg1;
- (void)dealloc;
- (id)init;

@end

