//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "WAViewController.h"

#import "MKMapViewDelegate.h"
#import "UISearchBarDelegate.h"
#import "UISearchDisplayDelegate.h"
#import "UITableViewDataSource.h"
#import "UITableViewDelegate.h"
#import "WALinkLabelDelegate.h"

@class CLGeocoder, CLLocation, CLPlacemark, GTMHTTPFetcher, MKMapView, NSArray, NSMutableArray, NSString, UIBarButtonItem, UISearchBar, UITableView, UIView, WAChatButton, WALinkLabel, WAMapCrosshairView;

__attribute__((visibility("hidden")))
@interface ShareLocationController : WAViewController <MKMapViewDelegate, UISearchBarDelegate, WALinkLabelDelegate, UITableViewDataSource, UITableViewDelegate, UISearchDisplayDelegate>
{
    id <ShareLocationControllerDelegate> _delegate;
    NSString *_placeSearchCriteria;
    WALinkLabel *_viewAttribution;
    BOOL _shouldUpdatePlaces;
    NSArray *_places;
    NSMutableArray *_searchHistory;
    CLLocation *_searchLocation;
    double _searchRadius;
    struct {
        CDStruct_2c43369c center;
        struct {
            double latitudeDelta;
            double longitudeDelta;
        } span;
    } _displayedMapRegion;
    GTMHTTPFetcher *_fetcher;
    CLGeocoder *_geocoder;
    CLPlacemark *_lastKnownPlacemark;
    BOOL _displayShadow;
    int _lastKnownOrientation;
    BOOL _showCollapseButton;
    BOOL _placeListExpanded;
    BOOL _mapCrosshairVisible;
    BOOL _animatingResize;
    BOOL _animatingRotation;
    BOOL _locationUnavailableAlertShown;
    UISearchBar *_searchBar;
    UIView *_viewMapContainer;
    MKMapView *_mapView;
    WAMapCrosshairView *_mapCrosshair;
    UIView *_viewMapDivider;
    UITableView *_tableViewPlaces;
    UIBarButtonItem *_barButtonCancel;
    UIBarButtonItem *_barButtonRefresh;
    UIView *_viewMapButtons;
    WAChatButton *_buttonUserTracking;
    WAChatButton *_button3DMap;
    NSString *_accuracyStr;
    NSString *_currentAddress;
}

@property(copy, nonatomic) NSString *currentAddress; // @synthesize currentAddress=_currentAddress;
@property(copy, nonatomic) NSString *accuracyStr; // @synthesize accuracyStr=_accuracyStr;
@property(retain, nonatomic) WAChatButton *button3DMap; // @synthesize button3DMap=_button3DMap;
@property(retain, nonatomic) WAChatButton *buttonUserTracking; // @synthesize buttonUserTracking=_buttonUserTracking;
@property(retain, nonatomic) UIView *viewMapButtons; // @synthesize viewMapButtons=_viewMapButtons;
@property(retain, nonatomic) UIBarButtonItem *barButtonRefresh; // @synthesize barButtonRefresh=_barButtonRefresh;
@property(retain, nonatomic) UIBarButtonItem *barButtonCancel; // @synthesize barButtonCancel=_barButtonCancel;
@property(retain, nonatomic) UITableView *tableViewPlaces; // @synthesize tableViewPlaces=_tableViewPlaces;
@property(retain, nonatomic) UIView *viewMapDivider; // @synthesize viewMapDivider=_viewMapDivider;
@property(retain, nonatomic) WAMapCrosshairView *mapCrosshair; // @synthesize mapCrosshair=_mapCrosshair;
@property(retain, nonatomic) MKMapView *mapView; // @synthesize mapView=_mapView;
@property(retain, nonatomic) UIView *viewMapContainer; // @synthesize viewMapContainer=_viewMapContainer;
@property(retain, nonatomic) UISearchBar *searchBar; // @synthesize searchBar=_searchBar;

- (void)handleOpenURL:(id)arg1 fromLinkLabel:(id)arg2;
- (void)searchDisplayControllerWillEndSearch:(id)arg1;
- (void)searchDisplayControllerDidBeginSearch:(id)arg1;
- (void)searchDisplayControllerWillBeginSearch:(id)arg1;
- (void)searchDisplayController:(id)arg1 didHideSearchResultsTableView:(id)arg2;
- (BOOL)searchDisplayController:(id)arg1 shouldReloadTableForSearchString:(id)arg2;
- (void)searchDisplayController:(id)arg1 willShowSearchResultsTableView:(id)arg2;
- (void)searchBarSearchButtonClicked:(id)arg1;
- (void)fetcher:(id)arg1 finishedWithFSQData:(id)arg2 error:(id)arg3;
- (void)fetcher:(id)arg1 finishedWithGoogleData:(id)arg2 error:(id)arg3;
- (void)mapView:(id)arg1 didChangeUserTrackingMode:(int)arg2 animated:(BOOL)arg3;
- (void)mapView:(id)arg1 regionDidChangeAnimated:(BOOL)arg2;
- (void)mapView:(id)arg1 annotationView:(id)arg2 calloutAccessoryControlTapped:(id)arg3;
- (id)mapView:(id)arg1 viewForAnnotation:(id)arg2;
- (void)mapView:(id)arg1 didFailToLocateUserWithError:(id)arg2;
- (void)mapView:(id)arg1 didUpdateUserLocation:(id)arg2;
- (void)scrollViewDidScroll:(id)arg1;
- (void)tableView:(id)arg1 accessoryButtonTappedForRowWithIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (int)tableView:(id)arg1 numberOfRowsInSection:(int)arg2;
- (int)numberOfSectionsInTableView:(id)arg1;
- (void)didRotateFromInterfaceOrientation:(int)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(int)arg1 duration:(double)arg2;
- (BOOL)shouldAutorotateToInterfaceOrientation:(int)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidDisappear:(BOOL)arg1;
- (void)viewDidAppear:(BOOL)arg1;
- (void)viewWillAppear:(BOOL)arg1;
- (void)viewDidLoad;
- (void)showDetailsForWAPlace:(id)arg1;
- (void)expandOrCollapsePlaceListZoomingToPlaces:(BOOL)arg1;
- (void)changeMap3DModeAction:(id)arg1;
- (void)changeUserTrackingModeAction:(id)arg1;
- (void)refreshAction:(id)arg1;
- (void)cancelAction:(id)arg1;
- (id)fullPathToSearchHistoryFile;
- (void)addSearchHistoryItem:(id)arg1;
- (void)updateButton3DMapState;
- (void)updateUserTrackingButtonImage;
- (void)setAttribution:(id)arg1;
- (void)processLocationError:(id)arg1;
- (void)processUpdatedLocation:(id)arg1;
- (void)searchWithCriteria:(id)arg1;
- (void)searchForPlaces;
- (BOOL)searchCache:(id)arg1;
- (void)searchWithFoursquare;
- (void)searchWithGoogle;
- (void)sendWAPlace:(id)arg1;
- (void)sendCurrentLocation;
- (void)useResults:(id)arg1 cache:(BOOL)arg2;
- (void)zoomToLocation:(id)arg1 animated:(BOOL)arg2;
- (void)zoomToPlacesAnimated:(BOOL)arg1;
- (void)deselectAllPlaceAnnotations;
- (void)updateLayoutForCurrentOrientation;
- (void)updateViewDividerPosition;
- (void)reloadDividerImage;
- (void)dealloc;
- (id)initWithShareDelegate:(id)arg1;

@end

